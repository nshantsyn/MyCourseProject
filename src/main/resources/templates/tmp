

  x = [];
  y = [];
  x1 = [];
  y1 = [];
  y1 = [];
  for (let i = 0; i <=11 ; i= i+ 0.05) {
    x.push(i);
    y.push(i);
  }

  z = [];
  for (let i = 0; i < x.length; i++) {
    tmp = [];
    for (let j = 0; j < y.length; j++) {

      if(constraint(y[j],x[i])){
        console.log(y[j] + " "+ x[i]);
        x1.push(y[j]);
        y1.push(x[i]);
      }
      let pair = {
        x:y[j],
        y:x[i]
      };
      tmp.push(math.evaluate("2000 * x + 3000 * y",pair))
    }
    z.push(tmp);
  }
  var trace1 = {
    z: z,
    x: x,
    y: y,
    ncontours: 100,
    showscale: false,
    type: 'contour'
  };
  var trace2 = {

    x: x1,
    y: y1,
    showscale: false,
    type: 'scatter',
    mode: 'markers',
    marker: {
      color: 'rgba(156, 165, 196, 0.95)',
      line: {
        color: 'rgba(156, 165, 196, 1.0)',
        width: 1,
      },
      symbol: 'circle',
      size: 5
    }
  };
  var trace3 = {
    x:[0.6952589592832341, 1.6952589592832341, 1.9452589592832341, 2.070258959283234, 2.070258959283234, 2.101508959283234, 2.101508959283234, 2.101508959283234, 2.101997240533234, 2.102241381158234, 2.102363451470734, 2.102424486626984, 2.102455004205109, 2.102455004205109, 2.1024626335996404, 2.102464540948273, 2.102464540948273, 2.102464540948273, 2.102464540948273],
    y:[2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.2991784787075416],
    name: 'steepest',
    line: {color: 'black'},
    type: 'scatter'
  };
  var trace4 = {

    x:[1.6952589592832341, -0.3047410407167659, 0.6952589592832341, 0.6952589592832341, 1.6952589592832341, 1.6952589592832341, -0.3047410407167659, -0.3047410407167659, 1.9452589592832341, 1.4452589592832341, 1.6952589592832341, 1.6952589592832341, 1.9452589592832341, 1.9452589592832341, 1.4452589592832341, 1.4452589592832341, 2.070258959283234, 1.8202589592832341, 1.9452589592832341, 1.9452589592832341, 2.070258959283234, 2.070258959283234, 1.8202589592832341, 1.8202589592832341, 2.101508959283234, 2.039008959283234, 2.070258959283234, 2.070258959283234, 2.101508959283234, 2.101508959283234, 2.039008959283234, 2.039008959283234, 2.101997240533234, 2.101020678033234, 2.101508959283234, 2.101508959283234, 2.101997240533234, 2.101997240533234, 2.101020678033234, 2.101020678033234, 2.102241381158234, 2.101753099908234, 2.101997240533234, 2.101997240533234, 2.102241381158234, 2.102241381158234, 2.101753099908234, 2.101753099908234, 2.102363451470734, 2.102119310845734, 2.102241381158234, 2.102241381158234, 2.102363451470734, 2.102363451470734, 2.102119310845734, 2.102119310845734, 2.102424486626984, 2.102302416314484, 2.102363451470734, 2.102363451470734, 2.102424486626984, 2.102424486626984, 2.102302416314484, 2.102302416314484, 2.102455004205109, 2.102393969048859, 2.102424486626984, 2.102424486626984, 2.102455004205109, 2.102455004205109, 2.102393969048859, 2.102393969048859, 2.1024626335996404, 2.102447374810578, 2.102455004205109, 2.102455004205109, 2.1024626335996404, 2.1024626335996404, 2.102447374810578, 2.102447374810578, 2.102464540948273, 2.1024607262510076, 2.1024626335996404, 2.1024626335996404, 2.102464540948273, 2.102464540948273, 2.1024607262510076, 2.1024607262510076],
    y:[2.2991784787075416, 2.2991784787075416, 1.2991784787075416, 3.2991784787075416, 3.2991784787075416, 1.2991784787075416, 1.2991784787075416, 3.2991784787075416, 2.2991784787075416, 2.2991784787075416, 2.0491784787075416, 2.5491784787075416, 2.5491784787075416, 2.0491784787075416, 2.0491784787075416, 2.5491784787075416, 2.2991784787075416, 2.2991784787075416, 2.1741784787075416, 2.4241784787075416, 2.4241784787075416, 2.1741784787075416, 2.1741784787075416, 2.4241784787075416, 2.2991784787075416, 2.2991784787075416, 2.2679284787075416, 2.3304284787075416, 2.3304284787075416, 2.2679284787075416, 2.2679284787075416, 2.3304284787075416, 2.2991784787075416, 2.2991784787075416, 2.2986901974575416, 2.2996667599575416, 2.2996667599575416, 2.2986901974575416, 2.2986901974575416, 2.2996667599575416, 2.2991784787075416, 2.2991784787075416, 2.2989343380825416, 2.2994226193325416, 2.2994226193325416, 2.2989343380825416, 2.2989343380825416, 2.2994226193325416, 2.2991784787075416, 2.2991784787075416, 2.2990564083950416, 2.2993005490200416, 2.2993005490200416, 2.2990564083950416, 2.2990564083950416, 2.2993005490200416, 2.2991784787075416, 2.2991784787075416, 2.2991174435512916, 2.2992395138637916, 2.2992395138637916, 2.2991174435512916, 2.2991174435512916, 2.2992395138637916, 2.2991784787075416, 2.2991784787075416, 2.2991479611294166, 2.2992089962856666, 2.2992089962856666, 2.2991479611294166, 2.2991479611294166, 2.2992089962856666, 2.2991784787075416, 2.2991784787075416, 2.2991708493130103, 2.299186108102073, 2.299186108102073, 2.2991708493130103, 2.2991708493130103, 2.299186108102073, 2.2991784787075416, 2.2991784787075416, 2.2991765713589087, 2.2991803860561744, 2.2991803860561744, 2.2991765713589087, 2.2991765713589087, 2.2991803860561744],
    showscale: false,
    type: 'scatter',
    mode: 'markers',
    marker: {
      color: 'rgba(180,8,206,0.95)',
      line: {
        color: 'rgb(209,12,227)',
        width: 1,
      },
      symbol: 'circle',
      size: 6
    }
  };
  var data = [trace1,trace2,trace3];


  Plotly.newPlot('myDiv', data);

  function constraint(x,y) {
    return 3*x + 3 * y <= 15
            && 2 * x + 6 * y <= 18
            && 4 * x <= 16
            && x + 2 * y <= 8
            && x >= 0
            && y >= 0;
  }